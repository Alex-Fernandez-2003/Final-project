---
import { Icon } from 'astro-icon/components';
import Layout from '../../layouts/LayoutAdmin.astro';

// Fetch initial articles from the API
const response = await fetch('https://apimocha.com/reydelbolo/articles');
const initialArticles = await response.json();
---

<Layout title="Dashboard de Administración - Productos">
  <div id="app" class="hidden">
    <div class="min-h-screen w-full bg-white flex flex-col md:flex-row">
      <!-- Sidebar -->
      <aside class="w-full md:w-64 bg-green-800 text-white p-6 md:fixed md:h-full md:top-0">
        <h1 class="text-2xl font-bold text-white mb-6">Admin Panel</h1>
        <nav>
          <ul class="space-y-2">
            <li>
              <a href="#" class="flex items-center text-gray-200 hover:text-gray-100">
                <Icon name="mdi:view-dashboard" class="w-5 h-5 mr-2" />
                Dashboard
              </a>
            </li>
            <li>
              <a href="#" class="flex items-center text-white bg-green-600 rounded-md p-2">
                <Icon name="mdi:package-variant-closed" class="w-5 h-5 mr-2" />
                Productos
              </a>
            </li>
            <li>
              <a href="#" class="flex items-center text-gray-200 hover:text-gray-100">
                <Icon name="mdi:cart" class="w-5 h-5 mr-2" />
                Pedidos
              </a>
            </li>
            <li>
              <a href="#" class="flex items-center text-gray-200 hover:text-gray-100">
                <Icon name="mdi:account-group" class="w-5 h-5 mr-2" />
                Clientes
              </a>
            </li>
          </ul>
        </nav>
        <button id="logoutBtn" class="mt-8 w-full bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded transition duration-300">
          Cerrar Sesión
        </button>
      </aside>

      <!-- Main Content -->
      <main class="flex-1 p-8 md:ml-64 bg-green-100">
        <h2 class="text-3xl font-bold text-gray-900 mb-6">Gestión de Productos</h2>

        <!-- Search and Add Product -->
        <div class="flex flex-col sm:flex-row justify-between mb-6 space-y-4 sm:space-y-0">
          <div class="relative w-full sm:w-auto">
            <input type="text" id="searchInput" placeholder="Buscar productos..."
              class="bg-white text-gray-900 border border-gray-300 rounded-md p-2 pl-10 w-full sm:w-64">
            <Icon name="mdi:magnify" class="absolute left-3 top-2.5 text-gray-500 w-5 h-5" />
          </div>
          <button id="addProductBtn"
            class="bg-green-800 hover:bg-green-600 text-white font-bold py-2 px-4 rounded transition duration-300 flex items-center justify-center">
            <Icon name="mdi:plus" class="w-5 h-5 mr-2" />
            Añadir Producto
          </button>
        </div>

        <!-- Products Table -->
        <div class="bg-white border border-gray-300 rounded-lg shadow-lg text-gray-900 p-6 overflow-x-auto">
          <table class="w-full min-w-max">
            <thead>
              <tr class="text-left border-b border-gray-300">
                <th class="pb-2">ID</th>
                <th class="pb-2">Artículo</th>
                <th class="pb-2">Descripción</th>
                <th class="pb-2">Precio</th>
                <th class="pb-2">Acciones</th>
              </tr>
            </thead>
            <tbody id="productsTableBody">
              <!-- Table rows will be dynamically inserted here -->
            </tbody>
          </table>
        </div>
      </main>
    </div>

    <!-- Add/Edit Product Modal -->
    <div id="productModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
      <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <h3 id="modalTitle" class="text-lg font-bold mb-4">Añadir Producto</h3>
        <form id="productForm">
          <input type="hidden" id="productId">
          <div class="mb-4">
            <label for="articleInput" class="block text-gray-700 text-sm font-bold mb-2">Artículo</label>
            <input type="text" id="articleInput" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
          </div>
          <div class="mb-4">
            <label for="descriptionInput" class="block text-gray-700 text-sm font-bold mb-2">Descripción</label>
            <input type="text" id="descriptionInput" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
          </div>
          <div class="mb-4">
            <label for="priceInput" class="block text-gray-700 text-sm font-bold mb-2">Precio</label>
            <input type="number" id="priceInput" step="0.01" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
          </div>
          <div class="flex items-center justify-between">
            <button type="submit" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
              Guardar
            </button>
            <button type="button" id="cancelBtn" class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
              Cancelar
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <div id="unauthorized" class="hidden min-h-screen w-full bg-[#D9F5DC] flex items-center justify-center p-4">
    <div class="w-[350px] bg-white border border-[#467B52] rounded-lg shadow-xl text-black p-6 text-center">
      <h2 class="text-2xl font-bold text-[#2D5834] mb-4">Acceso No Autorizado</h2>
      <p class="text-[#5C7551] mb-6">Por favor, inicia sesión para acceder al panel de administración.</p>
      <a href="../admin" class="bg-[#2D5834] hover:bg-[#467B52] text-white font-bold py-2 px-4 rounded transition duration-300 inline-block">
        Ir al Login
      </a>
    </div>
  </div>
</Layout>

<script define:vars={{ initialArticles }}>
  // Check session and initialize
  function checkSession() {
    const sessionUser = localStorage.getItem('sessionUser');
    if (!sessionUser) {
      document.getElementById('unauthorized').classList.remove('hidden');
      return false;
    }
    document.getElementById('app').classList.remove('hidden');
    return true;
  }

  // Logout function
  function logout() {
    localStorage.removeItem('sessionUser');
    window.location.href = '../admin/';
  }

  // Initialize articles in localStorage if not present
  if (!localStorage.getItem('articles')) {
    localStorage.setItem('articles', JSON.stringify(initialArticles));
  }

  // Function to get articles from localStorage
  function getArticles() {
    return JSON.parse(localStorage.getItem('articles')) || [];
  }

  // Function to save articles to localStorage
  function saveArticles(articles) {
    localStorage.setItem('articles', JSON.stringify(articles));
  }

  // Function to render articles in the table
  function renderArticles() {
    const articles = getArticles();
    const tableBody = document.getElementById('productsTableBody');
    tableBody.innerHTML = '';

    articles.forEach(article => {
      const row = document.createElement('tr');
      row.className = 'border-b border-gray-300';
      row.innerHTML = `
        <td class="py-3">${article.id}</td>
        <td>${article.article}</td>
        <td>${article.description}</td>
        <td>$${article.price.toFixed(2)}</td>
        <td>
          <button class="text-blue-600 hover:text-blue-500 mr-2 edit-btn" data-id="${article.id}">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
            </svg>
          </button>
          <button class="text-red-600 hover:text-red-500 delete-btn" data-id="${article.id}">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
            </svg>
          </button>
        </td>
      `;
      tableBody.appendChild(row);
    });
  }

  // Function to add a new article
  function addArticle(article) {
    const articles = getArticles();
    article.id = articles.length > 0 ? Math.max(...articles.map(a => a.id)) + 1 : 1;
    articles.push(article);
    saveArticles(articles);
    renderArticles();
  }

  // Function to update an existing article
  function updateArticle(updatedArticle) {
    const articles = getArticles();
    const index = articles.findIndex(a => a.id === updatedArticle.id);
    if (index !== -1) {
      articles[index] = updatedArticle;
      saveArticles(articles);
      renderArticles();
    }
  }

  // Function to delete an article
  function deleteArticle(id) {
    const articles = getArticles();
    const updatedArticles = articles.filter(a => a.id !== id);
    saveArticles(updatedArticles);
    renderArticles();
  }

  // Check session before initializing
  if (checkSession()) {
    // Event listener for add product button
    document.getElementById('addProductBtn').addEventListener('click', () => {
      document.getElementById('modalTitle').textContent = 'Añadir Producto';
      document.getElementById('productId').value = '';
      document.getElementById('articleInput').value = '';
      document.getElementById('descriptionInput').value = '';
      document.getElementById('priceInput').value = '';
      document.getElementById('productModal').classList.remove('hidden');
    });

    // Event listener for cancel button in modal
    document.getElementById('cancelBtn').addEventListener('click', () => {
      document.getElementById('productModal').classList.add('hidden');
    });

    // Event listener for form submission
    document.getElementById('productForm').addEventListener('submit', (e) => {
      e.preventDefault();
      const id = document.getElementById('productId').value;
      const article = {
        article: document.getElementById('articleInput').value,
        description: document.getElementById('descriptionInput').value,
        price: parseFloat(document.getElementById('priceInput').value),
      };

      if (id) {
        article.id = parseInt(id);
        updateArticle(article);
      } else {
        addArticle(article);
      }

      document.getElementById('productModal').classList.add('hidden');
    });

    // Event delegation for edit and delete buttons
    document.getElementById('productsTableBody').addEventListener('click', (e) => {
      if (e.target.closest('.edit-btn')) {
        const id = parseInt(e.target.closest('.edit-btn').getAttribute('data-id'));
        const article = getArticles().find(a => a.id === id);
        if (article) {
          document.getElementById('modalTitle').textContent = 'Editar Producto';
          document.getElementById('productId').value = article.id;
          document.getElementById('articleInput').value = article.article;
          document.getElementById('descriptionInput').value = article.description;
          document.getElementById('priceInput').value = article.price;
          document.getElementById('productModal').classList.remove('hidden');
        }
      } else if (e.target.closest('.delete-btn')) {
        const id = parseInt(e.target.closest('.delete-btn').getAttribute('data-id'));
        if (confirm('¿Estás seguro de que quieres eliminar este producto?')) {
          deleteArticle(id);
        }
      }
    });

    // Event listener for search input
    document.getElementById('searchInput').addEventListener('input', (e) => {
      const searchTerm = e.target.value.toLowerCase();
      const articles = getArticles();
      const filteredArticles = articles.filter(article => 
        article.article.toLowerCase().includes(searchTerm) || 
        article.description.toLowerCase().includes(searchTerm)
      );
      renderFilteredArticles(filteredArticles);
    });

    // Event listener for logout button
    document.getElementById('logoutBtn').addEventListener('click', logout);

    // Initial render
    renderArticles();
  }

  // Function to render filtered articles
  function renderFilteredArticles(articles) {
    const tableBody = document.getElementById('productsTableBody');
    tableBody.innerHTML = '';

    articles.forEach(article => {
      const row = document.createElement('tr');
      row.className = 'border-b border-gray-300';
      row.innerHTML = `
        <td class="py-3">${article.id}</td>
        <td>${article.article}</td>
        <td>${article.description}</td>
        <td>$${article.price.toFixed(2)}</td>
        <td>
          <button class="text-blue-600 hover:text-blue-500 mr-2 edit-btn" data-id="${article.id}">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
            </svg>
          </button>
          <button class="text-red-600 hover:text-red-500 delete-btn" data-id="${article.id}">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
            </svg>
          </button>
        </td>
      `;
      tableBody.appendChild(row);
    });
  }
</script>